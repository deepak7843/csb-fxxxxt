{"version":3,"sources":["Redux/App/action.js","utils/localStorage.js","Redux/App/reducer.js","Redux/Auth/action.js","Redux/Auth/reducer.js","Redux/store.js","Containers/Counter.jsx","Containers/TestComponent.jsx","App.js","index.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","saveData","key","data","localStorage","setItem","JSON","stringify","initialState","counter","getItem","parse","error","loadData","todos","id","title","status","reducer","state","action","type","payload","types","newCount","LOGIN_SUCCESS","LOGIN_FAILURE","isAuth","token","rootReducer","combineReducers","mainApp","AuthReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","console","log","val","Counter","useSelector","dispatch","useDispatch","onClick","actionObject","TestComponent","shallowEqual","length","App","className","rootElement","document","getElementById","root","createRoot","getState","render"],"mappings":"6OAAaA,EAAoB,oBACpBC,EAAoB,oBCSjC,SAASC,EAASC,EAAKC,GACrBC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,ICP3C,IAAMK,EAAe,CAEnBC,QDNF,SAAkBP,GAChB,IACE,IAAIC,EAAOC,aAAaM,QAAQR,GAEhC,OADAC,EAAOG,KAAKK,MAAMR,GAElB,MAAOS,GACP,QCAOC,CAAS,YAAc,EAChCC,MAAO,CAAEC,GAAI,EAAGC,MAAO,WAAYC,QAAQ,IA4B9BC,EAvBC,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCACxCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GAEN,KAAKE,EACH,IAAIC,EAAWL,EAAMV,QAAUa,EAE/B,OADArB,EAAS,UAAWuB,GACb,2BACFL,GADL,IAGEV,QAASe,EACTV,MAAM,eAAMK,EAAML,SAItB,KAAKS,EACH,OAAO,2BAAKJ,GAAZ,IAAmBV,QAASU,EAAMV,QAAUa,IAC9C,QACE,OAAOH,IC/BAM,EAAgB,gBAChBC,EAAgB,gBCCvBlB,EAAe,CACnBmB,QAAQ,EACRC,MAAO,ICyBHC,EAAcC,YAAgB,CAAEC,QAASb,EAASc,YDtBxC,WAAmC,IAAlCb,EAAiC,uDAAzBX,EAAcY,EAAW,uCACxCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKE,EACH,OAAO,2BACFJ,GADL,IAEEQ,QAAQ,EACRC,MAAON,IAEX,KAAKC,EACH,OAAO,2BACFJ,GADL,IAEEQ,QAAQ,EACRC,MAAO,KAEX,QACE,OAAOT,MC2BPc,EAAmBC,OAAOC,sCAAwCC,IAGlEC,EAAQC,YACZT,EACAI,EAAiBM,aAzBH,SAACF,GAAD,OAAW,SAACG,GAAD,OAAU,SAACpB,GACpCqB,QAAQC,IAAI,2BAA4BF,GACxC,IAAMG,EAAMH,EAAKpB,GAEjB,OADAqB,QAAQC,IAAI,qBAAsBC,GAC3BA,OAGO,SAACN,GAAD,OAAW,SAACG,GAAD,OAAU,SAACpB,GACpCqB,QAAQC,IAAI,2BAA4BtB,GACxC,IAAMuB,EAAMH,EAAKpB,GAEjB,OADAqB,QAAQC,IAAI,qBAAsBC,GAC3BA,S,cCQMC,EAtBC,WACd,IAAMnC,EAAUoC,aAAY,SAACR,GAAD,OAAWA,EAAMN,QAAQtB,WAG/CqC,EAAWC,cAQjB,OACE,qCACE,0CAAatC,KACb,wBAAQuC,QATY,WAEtB,IAAMC,EN9BD,CACL5B,KAAMtB,EACNuB,QM4BsC,IACtCwB,EAASG,IAMP,uBACA,mDClCSC,EARO,WACpB,IAAMpC,EAAQ+B,aAAY,SAACR,GAAD,OAAWA,EAAMvB,QAAOqC,KAIlD,OADAV,QAAQC,IAAI,2BAA4B5B,GACjC,kDAA0B,OAALA,QAAK,IAALA,KAAOsC,OAAS,OAAS,Y,MCFxC,SAASC,IACtB,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OCDN,IAAMC,EAAcC,SAASC,eAAe,QACtCC,EAAOC,qBAAWJ,GAExBd,QAAQC,IAAIL,EAAMuB,YAElBF,EAAKG,OACH,cAAC,aAAD,UACE,cAAC,IAAD,CAAUxB,MAAOA,EAAjB,SACE,cAACgB,EAAD,W","file":"static/js/main.d6c0aa4a.chunk.js","sourcesContent":["export const INCREMENT_COUNTER = \"INCREMENT_COUNTER\";\nexport const DECREMENT_COUNTER = \"DECREMENT_COUNTER\";\n\n// import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./actionTypes\";\n\nconst incrementCounter = (payload) => {\n  return {\n    type: INCREMENT_COUNTER,\n    payload\n  };\n};\n\nconst decrementCounter = (payload) => {\n  return {\n    type: DECREMENT_COUNTER,\n    payload\n  };\n};\n\nexport { incrementCounter, decrementCounter };\n","function loadData(key) {\r\n  try {\r\n    let data = localStorage.getItem(key);\r\n    data = JSON.parse(data);\r\n    return data;\r\n  } catch (error) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\nfunction saveData(key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n}\r\n\r\nexport { loadData, saveData };\r\n","// import { INCREMENT_COUNTER, DECREMENT_COUNTER } from \"./actionTypes\";\nimport * as types from \"./action\";\nimport { loadData, saveData } from \"../../utils/localStorage\";\n\nconst initialState = {\n  // counter: 0,\n  counter: loadData(\"counter\") || 0,\n  todos: { id: 1, title: \"Buy Milk\", status: false }\n};\n\n// console.log(\"...state.todos---\", ...initialState.todos);\n\nconst reducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    // case INCREMENT_COUNTER:\n    case types.INCREMENT_COUNTER:\n      let newCount = state.counter + payload;\n      saveData(\"counter\", newCount);\n      return {\n        ...state,\n        // counter: state.counter + payload,\n        counter: newCount,\n        todos: { ...state.todos }\n      };\n\n    // case DECREMENT_COUNTER:\n    case types.DECREMENT_COUNTER:\n      return { ...state, counter: state.counter - payload };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nconst loginSuccess = (payload) => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload\r\n  };\r\n};\r\n\r\nconst loginFailure = () => {\r\n  return {\r\n    type: LOGIN_FAILURE\r\n  };\r\n};\r\n\r\nexport { loginSuccess, loginFailure };\r\n","import * as types from \"./action\";\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  token: \"\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuth: true,\r\n        token: payload\r\n      };\r\n    case types.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        token: \"\"\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { reducer };\r\n","// import reducer from \"./reducer\";\n// import { createStore } from \"redux\";\n\n// // const createStore = (reducer, initialState) => {\n// //   const store = {};\n\n// //   store.state = initialState;\n\n// //   store.getState = () => store.state;\n\n// //   store.dispatch = (action) => {\n// //     store.state = reducer(store.state, action);\n// //   };\n\n// //   return store;\n// // };\n\n// const store = createStore(reducer, { counter: 0, todos: [] });\n\n// export { store };\n\n// ********************************************************************************************************************************\n\n// import { legacy_createStore } from \"redux\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\n\nimport reducer from \"./App/reducer\";\nimport { reducer as AuthReducer } from \"../Redux/Auth/reducer\";\n\nconst rootReducer = combineReducers({ mainApp: reducer, AuthReducer });\n\nconst logger1 = (store) => (next) => (action) => {\n  console.log(\"Dispatching action 1 - a\", next);\n  const val = next(action);\n  console.log(\"After return 1 - b\", val);\n  return val;\n};\n\nconst logger2 = (store) => (next) => (action) => {\n  console.log(\"Dispatching action 2 - c\", action);\n  const val = next(action);\n  console.log(\"After return 2 - d\", val);\n  return val;\n};\n\n// const store = legacy_createStore(reducer)\n// const store = createStore(reducer)\n// const store = createStore(rootReducer,\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//to bring together ->\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(logger1, logger2))\n);\n\nexport { store };\n","// import { store } from \"../Redux/store\";\n// import { incrementCounter } from \"../Redux/action\";\n// import { useState } from \"react\";\n// const Counter = () => {\n//   const [local, setLocal] = useState(0);\n//   const { counter } = store.getState();\n//   console.log(counter);\n//   const { dispatch } = store;\n//   const handleIncrement = () => {\n//     dispatch(incrementCounter(10));\n//     setLocal((prev) => prev + 1);\n//   };\n//   return (\n//     <>\n//       <h1>Count {counter}</h1>\n//       <button onClick={handleIncrement}>Increment</button>\n//       <button>Decrement</button>\n//     </>\n//   );\n// };\n\n// export { Counter };\n\n// ********************************************************************************************************************************************************\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { incrementCounter } from \"../Redux/App/action\";\n\nconst Counter = () => {\n  const counter = useSelector((store) => store.mainApp.counter);\n\n  // console.log(counter);\n  const dispatch = useDispatch();\n\n  const handleIncrement = () => {\n    // dispatch(incrementCounter(10));\n    const actionObject = incrementCounter(10);\n    dispatch(actionObject);\n  };\n\n  return (\n    <>\n      <h1>Counter {counter}</h1>\n      <button onClick={handleIncrement}>Increment</button>\n      <button>Decrement</button>\n    </>\n  );\n};\n\n// export { Counter };\nexport default Counter;\n","import { shallowEqual, useSelector } from \"react-redux\";\r\n\r\nconst TestComponent = () => {\r\n  const todos = useSelector((store) => store.todos, shallowEqual);\r\n  // console.log(\"todos--\", todos);\r\n\r\n  console.log(\"Rendering test component\", todos);\r\n  return <div>Test Component {todos?.length ? \"true\" : \"false\"}</div>;\r\n};\r\n\r\nexport default TestComponent;\r\n\r\n// ===\r\n","// import { Counter } from \"./Component/Counter\";\nimport Counter from \"./Containers/Counter\";\nimport TestComponent from \"./Containers/TestComponent\";\nimport \"./styles.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n      <TestComponent />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { store } from \"./Redux/store\";\n\nimport App from \"./App\";\n// import { AppContextProvider } from \"./Redux/AppContextProvider\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nconsole.log(store.getState());\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}